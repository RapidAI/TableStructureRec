<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博客 on TableStructureRec Documentation</title>
    <link>https://rapidai.github.io/TableStructureRec/docs/blog/</link>
    <description>Recent content in 博客 on TableStructureRec Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://rapidai.github.io/TableStructureRec/docs/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LORE: 无线表格结构识别算法</title>
      <link>https://rapidai.github.io/TableStructureRec/docs/blog/lineless_table_rec/</link>
      <pubDate>Tue, 21 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/TableStructureRec/docs/blog/lineless_table_rec/</guid>
      <description>引言 linkLORE算法来自论文LORE: Logical Location Regression Network for Table Structure Recognition，是阿里的一篇工作。
该工作主要解决无线表格结构识别问题，具体包括文档中涉及到一些三线表之类表格结构识别。对于有线的表格支持较差。
基本原理 link主要原理为:
1）基于无线单元格中心点回归出到4个顶点的距离，解码出单元格bbox；
2）结合视觉特征与单元格bbox信息，采用两个级联回归器兼顾全局与局部注意力，直接对单元格的逻辑坐标进行回归；
3）模型训练时显式利用单元格间与单元格内逻辑约束对模型进行优化。
参考资料 link 读光-表格结构识别-无线表格 </description>
    </item>
    
    <item>
      <title>Cycle-CenterNet: 有线表格结构识别算法</title>
      <link>https://rapidai.github.io/TableStructureRec/docs/blog/wired_table_rec/</link>
      <pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/TableStructureRec/docs/blog/wired_table_rec/</guid>
      <description>引言 linkCycle-CenterNet算法来自论文Parsing Table Structure in the Wild，是阿里的一篇工作。
该工作主要解决拍照和截屏场景下有线结构识别问题。
基本原理 link本模型是以自底向上的方式:
1）基于单元格中心点回归出到4个顶点的距离，解码出单元格bbox；同时基于单元格顶点，回归出到共用该顶点的单元格的中心点距离，解码出gbox。
2）基于gbox(group box)，将离散的bbox拼接起来得到精准完整的电子表格；
3）第二步的拼接将单元格从“离散”变为“连续”，因此用后处理算法获得单元格的行列信息。
参考资料 link 读光-表格结构识别-有线表格 </description>
    </item>
    
    <item>
      <title>三个表格识别算法评测</title>
      <link>https://rapidai.github.io/TableStructureRec/docs/blog/table_rec_evaluate/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/TableStructureRec/docs/blog/table_rec_evaluate/</guid>
      <description>引言 link为了便于比较不同表格识别算法的效果差异，本篇文章基于评测工具TableRecognitionMetric和表格测试数据集liekkas/table_recognition上计算不同算法的TEDS指标。
以下评测仅是基于表格测试数据集liekkas/table_recognition测试而来，不能完全代表模型效果。
因为每个模型训练数据不同，测试数据集如与训练数据相差较大，难免效果较差，请针对自身场景客观看待评测指标。
RapidTable: 有英文和中文两个模型，大多都是印刷体截屏表格。具体可参见:表格识别模型。
lineless_table_rec: 训练数据部分来自SciTSR与PubTabNet，训练集共45000张。这两个数据大多是来自论文截图，所以这个模型也是比较适用于论文中表格识别。
wired_table_rec: 训练数据为WTW，训练集为10970张。WTW数据组成有50%的自然场景下、30%的档案和20%的印刷体表格。所以这个模型更适合自然场景下拍照的表格识别。
指标结果 link 方法 TEDS RapidTable 0.58786 lineless_table_rec 0.50054 wired_table_rec 0.63316 评测步骤 link1. 安装评测数据集和评测工具包 link pip install table_recognition_metric pip install modelscope==1.5.2 pip install rapidocr_onnxruntime==1.3.8 2. 安装表格识别推理库 link pip install rapid_table pip install lineless_table_rec pip install wired_table_rec 3. 推理代码 link info 完整评测代码，请移步Gist
from modelscope.msdatasets import MsDataset from rapid_table import RapidTable from lineless_table_rec import LinelessTableRecognition from wired_table_rec import WiredTableRecognition from table_recognition_metric import TEDS test_data = MsDataset.</description>
    </item>
    
  </channel>
</rss>
